import std.io
import std.core
import std.linux
import std.string
import src.parser
import src.latex
import src.html

const (
    FMT_LATEX
    FMT_HTML
)

let main() {
    if argc < 2 {
        eprint("Usage: sdoc INPUT OUTPUT\n")
        eprint("Error: insufficient arguments\n")
        linux.exit(1)
    }

    let input = argv[0]
    let output = argv[1]

    let ext = core.extname(output)
    let fmt uint
    if string.eq(ext, "latex") {
        fmt = FMT_LATEX
    } else if string.eq(ext, "html") {
        fmt = FMT_HTML
    } else {
        eprint("Error: unsupported extension '", ext, "'\n")
        eprint("Supported.\n")
        eprint("  html\n")
        eprint("  latex\n")
        linux.exit(1)
    }

    let contents, ok = io.map_file(input)
    if !ok {
        eprint("Error: could not open file '", input, "'\n")
        linux.exit(1)
    }
    parser.init(contents)

    let outfd = linux.creat(output, 420)
    if outfd < 0 {
        eprint("Error: could not create file '", output, "'\n")
        linux.exit(1)
    }

    let file = io.File(outfd)
    match fmt {
        FMT_LATEX => latex.generate(&file)
        FMT_HTML => html.generate(&file)
        _ => assert(false, "unreachable")
    }
    io.flush(&file)
}
